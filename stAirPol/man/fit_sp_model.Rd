% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_sp_model}
\alias{fit_sp_model}
\title{fit_sp_model}
\usage{
fit_sp_model(data, model = "GPP", knots_method = "grid",
  training_set = NULL, knots_plot = FALSE, knots = NULL,
  knots_seed = NULL, knots_count = 5, ...)
}
\arguments{
\item{data}{Modelling data.frame which contains information about the
covariables and the target variable}

\item{model}{the spatio-temporal models to be fitted, current choices are:
"GP", "truncatedGP", "AR", "GPP", and "truncatedGPP",
with the first one as the default.}

\item{knots_method}{Only used if the model choice is GPP" or "truncatedGPP",
knots_method specifies the distribution method of the knots. Default is a
random distribution with respect to the location of the sensor. With
\code{knots_method = 'grid'} the knots will be arranged as a grid.}

\item{training_set}{an object generated by \link{get_test_and_training_set},
if those an object is delivered, the data argument will be reduced to the
in training_set specified training sensors.}

\item{knots_plot}{Should be knots be plotted, Boolean, with FALSE as default}

\item{knots}{matrix of knots locations}

\item{knots_seed}{Random seed for the knots sampling}

\item{knots_count}{How much knots should be used?}

\item{...}{additional arguments for \link{spT.Gibbs}}
}
\value{
An object of the class spT, see \link{spT.Gibbs} for more details
}
\description{
Fitting a spatio-temporal Bayesian model. This function is a wrapper for
\link{spT.Gibbs}. For details on the fitting procedure see \link{spT.Gibbs}.
This function makes it very esay to use \link{spT.Gibbs}.
}
\examples{
data("mini_dataset")
#' remove outliers
mini_dataset <- clean_model_data(mini_dataset)
#' simple formula
formula <-  value ~ rainhist + windhist + trafficvol

#' fit three kind of models and compair the PMCC
model.gp <- fit_sp_model(data = mini_dataset, formula = formula, model = 'GP')
model.ar <- fit_sp_model(data = mini_dataset, formula = formula, model = 'AR')
model.gpp <- fit_sp_model(data = mini_dataset, formula = formula, model = 'GPP')
print(model.gp$PMCC)
print(model.ar$PMCC)
print(model.gpp$PMCC)

#' different options for GPP model
model.gpp <- fit_sp_model(data = mini_dataset, formula = formula, model = 'GPP',
                          knots_method = 'random', knots_plot = TRUE,
                          knots_count = 20, knots_seed = 2202)

#' prioris
prio <- spT.priors(model = "GPP",
                   inv.var.prior = Gamm(0.5, 1),
                   beta.prior = Norm(0, 10^2)
)
model.gpp <- fit_sp_model(data = mini_dataset, formula = formula, model = 'GPP',
                          priors = prio)
#' see ?spTimer::spT.Gibbs for more options like scale.transform, spatial.decay


plot(model.gpp) #' trace plot of the MCMC-Iterations
summary(model.gpp) #' summary
#' perform the modelfit only on a trainingsset with 75\% of the values
training_set <- get_test_and_training_set(mini_dataset, sampel_size = 0.75,
                                          random.seed = 220292)
model.gp <- fit_sp_model(data = mini_dataset, formula = formula,
                            model = 'GP', training_set = training_set)
}
\seealso{
\link{spT.Gibbs}, \link{spT.initials}, \link{spT.geodist},
\link{fit_subintervalls}, \link{predict.stAirPol.model}, \link{predict_split}
}
